<form version="1.1" theme="light" stylesheet="sdds.css">
  <init>
    <set token="hide">true</set>
  </init>
  <label>Monitoring Console</label>
  <search id="deployment_connection_base">
    <query>index=_internal host=sdds component=PubSubSvr thread_name=TcpChannelThread PubSubSvr TcpChannelThread handshake
| stats count by _time channel host connectionId
| rex field=channel "tenantService.handshake.reply.(?&lt;client_name&gt;\w.{1,50})\/(?&lt;client_guid&gt;\w.{1,50})" 
| rex field=connectionId "connection\_(?&lt;ds_client_ip&gt;\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})\_(?&lt;ds_port&gt;\d+)\_(?&lt;ds_proxy_ip&gt;\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?\_?(?&lt;ds_client_hostname&gt;\w.{1,50})\_(?&lt;ds_client_guid&gt;\w.{1,50})"
| eval ds_proxy_ip=if(isnotnull(ds_proxy_ip), ds_proxy_ip, "N/A")
    </query>
    <earliest>$field1.earliest$</earliest>
    <latest>$field1.latest$</latest>
  </search>
  <search id="deployment_download_base">
    <query>index=_internal host=sdds component=PackageDownloadRestHandler app=* serverclass=* PackageDownloadRestHandler peer
| rex field=peer "(?&lt;peer&gt;[^\:]+)"
| stats count by _time peer serverclass app
    </query>
    <earliest>$field1.earliest$</earliest>
    <latest>$field1.latest$</latest>
  </search>
  <search id="containers_base">
    <query>index="sdds_events" sourcetype="kube:object:pods" 
| stats values(metadata.name) as pod_name values("spec.containers{}.name") as function values(status.podIP) as pod_ip values(status.startTime) as running_since values(metadata.namespace) as app values(status.hostIP) as node_ip latest(_time) as last_time by metadata.uid
| eval running_since=round(strptime(running_since,"%Y-%m-%dT%H:%M:%S%Z"),0)
| eval uptime=tostring(round(last_time-running_since,0), "duration")
| rex field=uptime "(?:(?&lt;days&gt;\d+)?\+)?0?(?&lt;hours&gt;\d{1,2})\:0?(?&lt;minutes&gt;\d{1,2})\:0?(?&lt;seconds&gt;\d{1,2})"
| fillnull days
| eval time_format_1=days."d ".hours."h ".minutes."m ".seconds."s"
| eval time_format_2=hours."h ".minutes."m ".seconds."s"
| eval uptime=if(days=0, time_format_2, time_format_1)
| table node_ip app function pod_name pod_ip running_since uptime last_time
  </query>
    <earliest>$field1.earliest$</earliest>
    <latest>$field1.latest$</latest>
  </search>
  <search id="history_base">
    <query>index="sdds_history" serverClass=* AND app=*  | stats values(orig_host) AS orig_host by _time serverClass app 
    </query>
    <earliest>$field1.earliest$</earliest>
    <latest>$field1.latest$</latest>
  </search>
  <search id="metrics_base">
    <query>| mstats avg(system.cpu.load_average.1m) as load_avg WHERE index=sdds_metrics span=1m by host 
| join host 
    [| mstats count(system.cpu.time) as count where index=sdds_metrics by host cpu 
    | stats dc(cpu) as cpu_count by host] 
| eval perc_load=round((load_avg/cpu_count)*100,4)
    </query>
    <earliest>$field1.earliest$</earliest>
    <latest>$field1.latest$</latest>
  </search>
  <search id="timechart_span">
    <query>| makeresults 
| eval range=if("$field1.latest$"=="now",now(),relative_time(now(),"$field1.latest$"))-if("$field1.earliest$"=="now",now(),relative_time(now(),"$field1.earliest$")) 
| eval minutes_floor=floor((range/5000)/60), span=if(minutes_floor&gt;0,minutes_floor."m","1m")
    </query>
    <earliest>$field1.earliest$</earliest>
    <latest>$field1.latest$</latest>
    <done>
      <set token="span">$result.span$</set>
    </done>
  </search>
  <fieldset submitButton="false" autoRun="true">
    <input type="time" token="field1" searchWhenChanged="true">
      <label>Time Range</label>
      <default>
        <earliest>-7d@h</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="checkbox" token="ct_hide" searchWhenChanged="true">
      <label>Show Client Timeline</label>
      <choice value="T">Yes</choice>
    </input>
  </fieldset>
  <row>
    <panel id="kubes_summary">
      <title>Kubernetes - Pod Summary</title>
      <input type="checkbox" token="kubes_hide" searchWhenChanged="true">
        <label></label>
        <choice value="T">Show Kubernetes Timeline</choice>
        <delimiter> </delimiter>
        <fieldForLabel>kubes_hide</fieldForLabel>
        <fieldForValue>kubes_hide</fieldForValue>
      </input>
      <html>
   <style>
        #kubes_summary{
            width:34% !important;
            }
        #sdds_summary{
            width:34% !important;
            }
        #sdds_apps_class_summary{
            width:32% !important;
            }
        #kubes_history{
            width:100% !important;
            }     
        #handshake_history{
            width:100% !important;
            }
        #appsNclasses_history{
            width:100% !important;
            }
 
  </style>
  </html>
      <single>
        <title>Kubernetes - Pods in Operation</title>
        <search base="containers_base">
          <query>| stats dc(pod_name) as "# of pods" by last_time app
| eventstats max(last_time) as maxtime
| where last_time = maxtime
| fields app "# of pods"</query>
        </search>
        <option name="colorMode">block</option>
        <option name="drilldown">none</option>
        <option name="height">130</option>
        <option name="rangeColors">["0x53a051","0x0877a6","0xf8be34","0xdc4e41"]</option>
        <option name="rangeValues">[5,10,100]</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">1</option>
        <option name="trellis.size">medium</option>
        <option name="trellis.splitBy">app</option>
        <option name="underLabel">pods</option>
        <option name="useColors">1</option>
      </single>
      <table>
        <title>Kubernetes - Pods by Namespace &amp; Role</title>
        <search base="containers_base">
          <query>| eventstats max(last_time) as maxtime
| where last_time = maxtime
| stats dc(pod_name) as pod_count by app function
| sort - pod_count
| rename pod_count as "Pod Count" app as Namespace function as "Pod Role"</query>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
    <panel id="sdds_summary">
      <title>Splunk - Client Handshaking Summary</title>
      <input type="checkbox" token="sdds_hide" searchWhenChanged="true">
        <label></label>
        <choice value="T">Show Splunk Timeline</choice>
        <delimiter> </delimiter>
        <fieldForLabel>sdds_hide</fieldForLabel>
        <fieldForValue>sdds_hide</fieldForValue>
      </input>
      <single>
        <title>Splunk - Clients Handshaked w/ DS</title>
        <search base="deployment_connection_base">
          <query>| stats dc(client_name) AS "Clients" dc(client_guid) AS "GUIDs"</query>
        </search>
        <option name="colorMode">block</option>
        <option name="drilldown">none</option>
        <option name="height">150</option>
        <option name="rangeColors">["0x53a051","0x0877a6","0xf8be34","0xdc4e41"]</option>
        <option name="rangeValues">[100,1000,10000]</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">1</option>
        <option name="trellis.size">medium</option>
        <option name="underLabel">found</option>
        <option name="useColors">1</option>
        <option name="useThousandSeparators">0</option>
      </single>
      <chart>
        <title>Splunk - Unique Clients &amp; GUIDs</title>
        <search base="deployment_connection_base">
          <query>| timechart dc(client_guid) AS GUIDs dc(client_name) AS Clients</query>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">bottom</option>
        <option name="height">350</option>
        <option name="refresh.display">progressbar</option>
      </chart>
      <table>
        <title>Splunk - SDDS Handshaking Details</title>
        <search base="deployment_connection_base">
          <query>| stats dc(ds_client_guid) AS GUIDs dc(ds_client_hostname) AS Hostnames by ds_client_ip, ds_proxy_ip, ds_port
| table GUIDs Hostnames ds_client_ip, ds_proxy_ip, ds_port
| rename ds_client_ip as "Client IP" ds_port as "DS Port" ds_proxy_ip as "Proxy IP"
| table "Client IP" GUIDs Hostnames "DS Port" "Proxy IP"</query>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
    <panel id="sdds_apps_class_summary">
      <title>Splunk - Severclasses | Apps</title>
      <input type="checkbox" token="anc_hide" searchWhenChanged="true">
        <label></label>
        <choice value="T">Show Splunk Timeline</choice>
        <delimiter> </delimiter>
        <fieldForLabel>anc_hide</fieldForLabel>
        <fieldForValue>anc_hide</fieldForValue>
      </input>
      <single>
        <title>Splunk - Clients w/ Recent Pulls, Serverclasses, Apps</title>
        <search>
          <query>index=sdds_history sourcetype=serverclasses
| stats dc(serverclass) as "Serverclasses" dc(app) AS "Apps"
| appendcols 
    [| search index=_internal host=sdds sourcetype=splunkd peer | rex field=peer "(?&lt;src_ip&gt;\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}):\d+" | stats dc(src_ip) AS Clients]
| table Clients Serverclasses Apps</query>
          <earliest>$field1.earliest$</earliest>
          <latest>$field1.latest$</latest>
        </search>
        <option name="colorMode">block</option>
        <option name="drilldown">none</option>
        <option name="height">150</option>
        <option name="rangeColors">["0x53a051","0x0877a6","0xf8be34","0x555"]</option>
        <option name="rangeValues">[5,10,25]</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">1</option>
        <option name="trellis.size">medium</option>
        <option name="underLabel">found</option>
        <option name="useColors">1</option>
      </single>
      <chart>
        <title>Splunk -  Recently Pulled Serverclasses &amp; Apps</title>
        <search base="deployment_download_base">
          <query>| timechart usenull=f useother=f span=1d dc(serverclass) AS Serverclasses dc(app) AS Apps</query>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">bottom</option>
        <option name="height">350</option>
        <option name="refresh.display">progressbar</option>
      </chart>
      <table>
        <title>Splunk - Clients w/ Recent Pulls by Serverclass &amp; App</title>
        <search base="deployment_download_base">
          <query>| stats dc(peer) as Clients by serverclass app
| rename serverclass as Serverclass app as App</query>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
      </table>
    </panel>
  </row>
  <row>
    <panel id="kubes_history" depends="$kubes_hide$=T">
      <title>Kubernetes: Timeline: Details</title>
      <input type="dropdown" token="kube_app">
        <label>Namespace</label>
        <choice value="*">All</choice>
        <default>*</default>
        <initialValue>*</initialValue>
        <fieldForLabel>app</fieldForLabel>
        <fieldForValue>app</fieldForValue>
        <search>
          <query>index=sdds*  sourcetype=sdds | stats count by k8s.pod.labels.app | where count&gt;1  | fields k8s.pod.labels.app | dedup k8s.pod.labels.app | rename k8s.pod.labels.app as app</query>
          <earliest>$field1.earliest$</earliest>
          <latest>$field1.latest$</latest>
        </search>
      </input>
      <table>
        <search base="containers_base">
          <query>| search app=$kube_app$
| sort - last_time 
| eval last_seen=strftime(last_time, "%y/%m/%d %H:%M:%S %Z") 
| eval running_since=strftime(running_since, "%y/%m/%d %H:%M:%S %Z") 
| table node_ip app function pod_name pod_ip running_since last_seen uptime
| rename node_ip as Node app as Namespace function as Role pod_name as "Pod Name" pod_ip as "Pod IP" running_since as "Running Since" last_seen as "Last Seen" uptime as "Uptime"</query>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
    <panel id="handshake_history" depends="$sdds_hide$=T">
      <title>Splunk: Handshake Timeline: Details</title>
      <input type="dropdown" token="ds_client_ip" searchWhenChanged="true">
        <label>Client IP</label>
        <choice value="*">All</choice>
        <default>*</default>
        <initialValue>*</initialValue>
        <fieldForLabel>ds_client_ip</fieldForLabel>
        <fieldForValue>ds_client_ip</fieldForValue>
        <search base="deployment_connection_base">
          <query>| stats count by ds_client_ip
| fields ds_client_ip</query>
        </search>
      </input>
      <input type="multiselect" token="ds_client_hostname" searchWhenChanged="true">
        <label>Client Hostname</label>
        <choice value="*">All</choice>
        <default>*</default>
        <initialValue>*</initialValue>
        <valuePrefix>ds_client_hostname=</valuePrefix>
        <delimiter> OR </delimiter>
        <fieldForLabel>ds_client_hostname</fieldForLabel>
        <fieldForValue>ds_client_hostname</fieldForValue>
        <search base="deployment_connection_base">
          <query>| stats count by ds_client_hostname | fields ds_client_hostname | dedup ds_client_hostname</query>
        </search>
      </input>
      <table>
        <search base="deployment_connection_base">
          <query>| stats last(_time) AS lastTime values(ds_client_ip) AS ds_client_ip values(ds_proxy_ip) AS ds_proxy_ip values(ds_port) AS ds_port by ds_client_hostname 
| search $ds_client_ip$ AND $ds_client_hostname$
| convert ctime(lastTime) AS lastTime 
| table lastTime ds_*
| rename lastTime as "Last Seen" ds_client_hostname as "Client Identifier" ds_client_ip as "Client IP" ds_port as "DS Port" ds_proxy_ip as "DS Proxy"</query>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel id="appsNclasses_history" depends="$anc_hide$=T">
      <title>Splunk: Serverclass &amp; App Timeline: Details</title>
      <input type="multiselect" token="app" searchWhenChanged="true">
        <label>Filter by App</label>
        <choice value="*">All</choice>
        <fieldForLabel>app</fieldForLabel>
        <fieldForValue>app</fieldForValue>
        <search base="deployment_download_base">
          <query>| stats count by app| fields app</query>
        </search>
        <default>*</default>
        <initialValue>*</initialValue>
        <valuePrefix>app="</valuePrefix>
        <delimiter> OR </delimiter>
        <valueSuffix>"</valueSuffix>
      </input>
      <input type="multiselect" token="serverclass" searchWhenChanged="true">
        <label>Filter by Serverclass</label>
        <fieldForLabel>serverclass</fieldForLabel>
        <fieldForValue>serverclass</fieldForValue>
        <search base="deployment_download_base">
          <query>| stats count by serverclass | fields serverclass</query>
        </search>
        <choice value="*">All</choice>
        <default>*</default>
        <initialValue>*</initialValue>
        <valuePrefix>serverclass="</valuePrefix>
        <delimiter> OR </delimiter>
        <valueSuffix>"</valueSuffix>
      </input>
      <table>
        <search base="deployment_download_base">
          <query>| search $app$ AND $serverclass$ 
| stats values(app) AS app by _time serverclass peer 
| eval Time=strftime(_time, "%y/%m/%d %H:%M:%S %Z") 
| table _time Time serverclass app peer 
| sort _time 
| rename serverclass as Serverclass app as App peer as Client 
| fields - _time</query>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel id="client_timeline_chart" depends="$ct_hide$">
      <title>Client Timeline: App Pulls (Client Count by App)</title>
      <input type="multiselect" token="serverClass" searchWhenChanged="true">
        <label>Serverclass</label>
        <choice value="*">All</choice>
        <default>*</default>
        <initialValue>*</initialValue>
        <valuePrefix>serverClass="</valuePrefix>
        <delimiter> OR </delimiter>
        <fieldForLabel>serverClass</fieldForLabel>
        <fieldForValue>serverClass</fieldForValue>
        <search>
          <query>index="sdds_history" | fields serverClass | dedup serverClass | sort -serverClass</query>
          <earliest>-7d@h</earliest>
          <latest>now</latest>
        </search>
        <valueSuffix>"</valueSuffix>
      </input>
      <input type="multiselect" token="app" searchWhenChanged="true">
        <label>App</label>
        <choice value="*">All</choice>
        <fieldForLabel>app</fieldForLabel>
        <fieldForValue>app</fieldForValue>
        <search>
          <query>index="sdds_history" | fields app | dedup app | sort -app</query>
          <earliest>-7d@h</earliest>
          <latest>now</latest>
        </search>
        <prefix>app="</prefix>
        <suffix>"</suffix>
        <default>*</default>
        <initialValue>*</initialValue>
      </input>
      <chart>
        <search base="history_base">
          <query>| search $serverClass$ AND $app$  | chart dc(orig_host) over _time by serverClass span=1h</query>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.nullValueMode">zero</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel id="client_timeline_tablet" depends="$ct_hide$">
      <title>Client Timeline: Client Activity: Details</title>
      <table>
        <search base="history_base">
          <query>| search $serverClass$ AND $app$
| eval Time=strftime(_time, "%Y-%m-%d %H:%M:%S %Z") 
| rename serverClass as Serverclass app as App orig_host as Client(s)
| table Time Serverclass App "Client(s)"</query>
        </search>
        <option name="count">25</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Kubernetes - CPU Load per Node</title>
      <chart>
        <search base="metrics_base">
          <query>
| timechart limit=0 span=$span$ avg(perc_load) as perc_load by host
| foreach "perc_load: *"
    [| eval &lt;&lt;MATCHSTR&gt;&gt;=round('&lt;&lt;FIELD&gt;&gt;',4)]
| fields - perc_load*</query>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.text">CPU Load %</option>
        <option name="charting.axisY.maximumNumber">200</option>
        <option name="charting.axisY.minimumNumber">0</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.nullValueMode">zero</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">bottom</option>
      </chart>
    </panel>
    <panel>
      <title>Kubernetes - Memory Usage per Node</title>
      <chart>
        <search>
          <query>| mstats avg(system.memory.usage) AS mem_usage_avg WHERE index=sdds_metrics NOT state=slab* BY span=1m state host
| eval state=case(state=="free","free",state=="cached" OR state=="buffered","cached/buffered",state=="used","used",1==1,state)
| stats sum(mem_usage_avg) as mem_usage_state_sum by _time host state
| eventstats sum(mem_usage_state_sum) as total_mem by _time host
| where state="used"
| eval perc_used=mem_usage_state_sum/total_mem
| timechart span=$span$ avg(perc_used) AS perc_used by host
| foreach *
    [| eval &lt;&lt;FIELD&gt;&gt;=round('&lt;&lt;FIELD&gt;&gt;'*100,2)]</query>
          <earliest>$field1.earliest$</earliest>
          <latest>$field1.latest$</latest>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.text">Memory Usage %</option>
        <option name="charting.axisY.maximumNumber">100</option>
        <option name="charting.axisY.minimumNumber">0</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.nullValueMode">zero</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">bottom</option>
      </chart>
    </panel>
  </row>
</form>